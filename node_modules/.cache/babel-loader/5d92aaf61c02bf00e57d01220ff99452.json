{"ast":null,"code":"var _jsxFileName = \"/Users/alicenguyen/Documents/sampleCode/dfgsamples/src/testComponents/DropDownInput.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Label = styled.label`\n  height: 21px;\n  font-family: 'Source Sans Pro';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 20px;\n  color: #6F6F6F;\n  margin-bottom: 3px;\n`;\n_c = Label;\nconst DropDownContainer = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  margin: 0px 0px 32px 0px; \n`;\n_c2 = DropDownContainer;\nconst DropDownHeader = styled(\"div\")`\n  height: 52px;\n  border: 1px solid #111111;\n  box-sizing: border-box;\n  border-radius: 4px;\n  font-size: 18px;\n  font-family: 'Source Sans Pro';\n  font-style: normal;\n  font-weight: 400;\n  padding: 15px 16px 16px 16px;\n  background-color: white;\n  border: ${props => props.isOpen === true ? '2px' : '1px'} solid ${props => props.isOpen === true ? '#0067C5' : props.defaultColor};\n`;\n/* margin-bottom: 0.8em;\n  padding: 0.4em 2em 0.4em 1em;\n  font-weight: 500;\n  font-size: 1.3rem;\n  color: #3faffa;\n  background: #ffffff;*/\n\n_c3 = DropDownHeader;\nconst DropDownListContainer = styled(\"div\")`\n  z-index: 1;\n  height: 52px;\n  margin-top: 0px;\n  width: 100%;  \n  border-radius: 4px 4px 0px 0px;\n  `; //margin-top: 58px;\n\n_c4 = DropDownListContainer;\nconst DropDownList = styled(\"ul\")`\n  background: #ffffff;\n  border: 2px solid #e5e5e5;\n  box-sizing: border-box;\n\n  font-family: 'Source Sans Pro';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 23px;\n\n  margin-block-start: 0;\n  padding-inline-start: 0px;\n`;\n_c5 = DropDownList;\nconst ListItem = styled(\"li\")`\n  list-style: none;\n  padding: 0.8em 0 0.8em 2em;\n  \n  &:hover{\n    background: linear-gradient(0deg, rgba(0, 0, 0, 0.06), rgba(0, 0, 0, 0.06)), #FFFFFF;\n  }\n`;\n_c6 = ListItem;\nexport const DropDownInput = props => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const onOptionClicked = value => () => {\n    setSelectedOption(value);\n    setIsOpen(false); //console.log(selectedOption);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DropDownContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: props.Label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropDownHeader, {\n      onClick: toggling,\n      isOpen: isOpen,\n      children: selectedOption || props.PlaceHolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(DropDownListContainer, {\n      children: /*#__PURE__*/_jsxDEV(DropDownList, {\n        children: props.Options.map(option => /*#__PURE__*/_jsxDEV(ListItem, {\n          onClick: onOptionClicked(option),\n          children: option\n        }, Math.random(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DropDownInput, \"BpVbkn/NswzhRYWTNyv0RP2ekPc=\");\n\n_c7 = DropDownInput;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"Label\");\n$RefreshReg$(_c2, \"DropDownContainer\");\n$RefreshReg$(_c3, \"DropDownHeader\");\n$RefreshReg$(_c4, \"DropDownListContainer\");\n$RefreshReg$(_c5, \"DropDownList\");\n$RefreshReg$(_c6, \"ListItem\");\n$RefreshReg$(_c7, \"DropDownInput\");","map":{"version":3,"sources":["/Users/alicenguyen/Documents/sampleCode/dfgsamples/src/testComponents/DropDownInput.js"],"names":["useState","styled","Label","label","DropDownContainer","DropDownHeader","props","isOpen","defaultColor","DropDownListContainer","DropDownList","ListItem","DropDownInput","setIsOpen","selectedOption","setSelectedOption","toggling","onOptionClicked","value","PlaceHolder","Options","map","option","Math","random"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA,MAAMC,KAAK,GAAGD,MAAM,CAACE,KAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,K;AAUN,MAAME,iBAAiB,GAAGH,MAAM,CAAC,KAAD,CAAQ;AACxC;AACA;AACA;AACA,CAJA;MAAMG,iB;AAMN,MAAMC,cAAc,GAAGJ,MAAM,CAAC,KAAD,CAAQ;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAYK,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,IAAjB,GAAwB,KAAxB,GAA+B,KAAM,UAASD,KAAK,IAAIA,KAAK,CAACC,MAAN,KAAiB,IAAjB,GAAwB,SAAxB,GAAmCD,KAAK,CAACE,YAAa;AAClI,CAZA;AAaA;AACA;AACA;AACA;AACA;AACA;;MAlBMH,c;AAoBN,MAAMI,qBAAqB,GAAGR,MAAM,CAAC,KAAD,CAAQ;AAC5C;AACA;AACA;AACA;AACA;AACA,GANA,C,CAOE;;MAPIQ,qB;AASN,MAAMC,YAAY,GAAGT,MAAM,CAAC,IAAD,CAAO;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;MAAMS,Y;AAeN,MAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAO;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;MAAMU,Q;AASN,OAAO,MAAMC,aAAa,GAAIN,KAAD,IAAW;AAAA;;AACtC,QAAM,CAACC,MAAD,EAASM,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACc,cAAD,EAAiBC,iBAAjB,IAAsCf,QAAQ,CAAC,IAAD,CAApD;;AAEA,QAAMgB,QAAQ,GAAG,MAAMH,SAAS,CAAC,CAACN,MAAF,CAAhC;;AAEA,QAAMU,eAAe,GAAGC,KAAK,IAAI,MAAM;AACrCH,IAAAA,iBAAiB,CAACG,KAAD,CAAjB;AACAL,IAAAA,SAAS,CAAC,KAAD,CAAT,CAFqC,CAGrC;AACD,GAJD;;AAMA,sBACE,QAAC,iBAAD;AAAA,4BACI,QAAC,KAAD;AAAA,gBAAQP,KAAK,CAACJ;AAAd;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,cAAD;AAAgB,MAAA,OAAO,EAAEc,QAAzB;AAAmC,MAAA,MAAM,EAAIT,MAA7C;AAAA,gBACGO,cAAc,IAAIR,KAAK,CAACa;AAD3B;AAAA;AAAA;AAAA;AAAA,YAFJ,EAKKZ,MAAM,iBACL,QAAC,qBAAD;AAAA,6BACE,QAAC,YAAD;AAAA,kBACGD,KAAK,CAACc,OAAN,CAAcC,GAAd,CAAkBC,MAAM,iBACvB,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEL,eAAe,CAACK,MAAD,CAAlC;AAAA,oBACGA;AADH,WAAiDC,IAAI,CAACC,MAAL,EAAjD;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANN;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA/BM;;GAAMZ,a;;MAAAA,a","sourcesContent":["import { useState } from \"react\";\nimport styled from \"styled-components\";\n\n\nconst Label = styled.label`\n  height: 21px;\n  font-family: 'Source Sans Pro';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 20px;\n  color: #6F6F6F;\n  margin-bottom: 3px;\n`\nconst DropDownContainer = styled(\"div\")`\n  display: flex;\n  flex-direction: column;\n  margin: 0px 0px 32px 0px; \n`;\n\nconst DropDownHeader = styled(\"div\")`\n  height: 52px;\n  border: 1px solid #111111;\n  box-sizing: border-box;\n  border-radius: 4px;\n  font-size: 18px;\n  font-family: 'Source Sans Pro';\n  font-style: normal;\n  font-weight: 400;\n  padding: 15px 16px 16px 16px;\n  background-color: white;\n  border: ${props => props.isOpen === true ? '2px': '1px'} solid ${props => props.isOpen === true ? '#0067C5': props.defaultColor};\n`;\n/* margin-bottom: 0.8em;\n  padding: 0.4em 2em 0.4em 1em;\n  font-weight: 500;\n  font-size: 1.3rem;\n  color: #3faffa;\n  background: #ffffff;*/\n\nconst DropDownListContainer = styled(\"div\")`\n  z-index: 1;\n  height: 52px;\n  margin-top: 0px;\n  width: 100%;  \n  border-radius: 4px 4px 0px 0px;\n  `;\n  //margin-top: 58px;\n\nconst DropDownList = styled(\"ul\")`\n  background: #ffffff;\n  border: 2px solid #e5e5e5;\n  box-sizing: border-box;\n\n  font-family: 'Source Sans Pro';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 18px;\n  line-height: 23px;\n\n  margin-block-start: 0;\n  padding-inline-start: 0px;\n`;\n\nconst ListItem = styled(\"li\")`\n  list-style: none;\n  padding: 0.8em 0 0.8em 2em;\n  \n  &:hover{\n    background: linear-gradient(0deg, rgba(0, 0, 0, 0.06), rgba(0, 0, 0, 0.06)), #FFFFFF;\n  }\n`;\n\nexport const DropDownInput = (props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const toggling = () => setIsOpen(!isOpen);\n\n  const onOptionClicked = value => () => {\n    setSelectedOption(value);\n    setIsOpen(false);\n    //console.log(selectedOption);\n  };\n\n  return (\n    <DropDownContainer>\n        <Label>{props.Label}</Label>\n        <DropDownHeader onClick={toggling} isOpen = {isOpen}>\n          {selectedOption || props.PlaceHolder}\n        </DropDownHeader>\n        {isOpen && (\n          <DropDownListContainer>\n            <DropDownList>\n              {props.Options.map(option => (\n                <ListItem onClick={onOptionClicked(option)} key={Math.random()}>\n                  {option}\n                </ListItem>\n              ))}\n            </DropDownList>\n          </DropDownListContainer>\n        )}\n    </DropDownContainer>\n  );\n}"]},"metadata":{},"sourceType":"module"}